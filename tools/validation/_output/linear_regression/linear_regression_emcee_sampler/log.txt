=====================================================================
Summary for inversion problem: Polynomial Regression
=====================================================================
Model shape: 4
---------------------------------------------------------------------
List of functions/properties set by you:
['log_likelihood', 'log_prior', 'model_shape', 'blobs_dtype']
---------------------------------------------------------------------
List of functions/properties created based on what you have provided:
['log_posterior', 'log_posterior_with_blobs']
---------------------------------------------------------------------
List of functions/properties that can be further set for the problem:
( not all of these may be relevant to your inversion workflow )
['objective', 'log_posterior', 'log_posterior_with_blobs', 'gradient', 'hessian', 'hessian_times_vector', 'residual', 'jacobian', 'jacobian_times_vector', 'data_misfit', 'regularization', 'regularization_matrix', 'regularization_factor', 'forward', 'data', 'data_covariance', 'data_covariance_inv', 'initial_model', 'bounds', 'constraints']
=============================
Summary for inversion options
=============================
Solving method: None set
Use `suggest_solving_methods()` to check available solving methods.
-----------------------------
Backend tool: `<class 'cofi.tools._emcee.Emcee'>` - an MIT licensed pure-Python implementation of Goodman & Weareâ€™s Affine Invariant Markov chain Monte Carlo (MCMC) Ensemble sampler
References: ['https://emcee.readthedocs.io/en/stable/user/sampler/#emcee.EnsembleSampler', 'https://emcee.readthedocs.io/en/stable/user/sampler/#emcee.EnsembleSampler.sample']
Use `suggest_tools()` to check available backend tools.
-----------------------------
Solver-specific parameters: 
nwalkers = 32
nsteps = 5000
initial_state = [[ 5.66112827e-05 -7.04453450e-05 -1.37793930e-04 -3.53116652e-05]
 [-4.61465718e-05  6.66572785e-06 -1.76285662e-05  1.20089277e-04]
 [ 6.98398941e-05 -1.71628835e-05 -9.07186580e-05  1.18862573e-04]
 [ 7.85532124e-05  2.65601009e-04  2.63486040e-05  1.64177112e-04]
 [ 4.60816300e-05  8.59234716e-06 -1.50995728e-04  7.21502462e-05]
 [-8.43419923e-05 -5.13325405e-05 -4.35368025e-06 -2.75300910e-05]
 [-1.56306679e-04 -7.95630992e-05  9.30584401e-05  6.77767410e-05]
 [ 6.98440259e-05  1.73602064e-05  6.62284514e-05  2.41122163e-05]
 [-1.68205088e-05  1.16476865e-04 -2.45747687e-05 -7.69667774e-05]
 [ 1.21217234e-04  1.23349680e-04 -1.57415529e-04  6.37952943e-05]
 [-2.04442302e-04  1.06948089e-04 -9.33762841e-05  7.84208188e-05]
 [-6.14875759e-05  3.32892440e-05 -1.38071702e-04 -2.80806292e-05]
 [-5.98172637e-06  9.61173766e-05  1.79428084e-04  5.80689542e-05]
 [ 2.97650449e-05 -1.02811577e-04 -1.41859646e-04  1.90336985e-05]
 [ 1.35753829e-05  6.08089662e-05  7.04981311e-05  3.60923378e-05]
 [-1.46696789e-04  8.92629472e-05 -1.05257134e-05 -9.55346445e-05]
 [-4.14764634e-05 -1.39874088e-04 -3.44080541e-05  7.50785886e-05]
 [-3.27625183e-05 -8.61598054e-05 -2.58184799e-05  4.60955615e-05]
 [-1.34938997e-04 -1.01907279e-04  1.27012239e-05 -1.24944372e-04]
 [ 1.94511561e-04 -1.53336458e-05 -9.06987225e-05 -8.17354155e-05]
 [-4.83122679e-05 -5.69828348e-05 -2.09159967e-04  1.26374053e-04]
 [-1.54833400e-06 -2.73764456e-06  8.17873512e-05 -1.05460447e-04]
 [-7.58327121e-05  4.57415649e-05 -6.43780508e-06  3.44902335e-05]
 [-8.00873354e-06 -2.41380132e-05  1.43351549e-04  1.06579371e-04]
 [-2.49875914e-04  1.48032856e-04  2.15872852e-04  1.23177838e-04]
 [-2.14324483e-05 -6.89194210e-05  7.27833114e-05 -6.19069360e-05]
 [ 3.56159830e-05 -2.18808743e-06  1.21805044e-04 -3.89458024e-05]
 [-4.42802345e-05  3.78226615e-05  1.93383980e-04  8.09708059e-06]
 [-4.16456364e-05  8.57503252e-05  7.18128280e-05 -9.51471751e-05]
 [-5.36160100e-05  1.09652886e-04  4.28012841e-05 -2.46969887e-04]
 [ 4.81979139e-05  9.26456359e-05 -8.37581392e-05  6.77186066e-05]
 [ 1.87231912e-04  3.96373940e-05 -6.25616295e-05 -5.22461480e-05]]
Use `suggest_solver_params()` to check required/optional solver-specific parameters.
============================
Summary for inversion result
============================
SUCCESS
----------------------------
sampler: <emcee.ensemble.EnsembleSampler object>
blob_names: ['log_likelihood', 'log_prior']
autocorrelation time: [60.06623419 66.33363928 45.80483908 52.6256319 ]
m0 = -5.717, (-0.423, +0.431)
m1 = -5.108, (-0.287, +0.291)
m2 = 1.818, (-0.217, +0.229)
m3 = 0.973, (-0.079, +0.08)
Posterior model covariance matrix
 [[ 0.18990987  0.05884848 -0.08062154 -0.02514717]
 [ 0.05884848  0.08758844 -0.03294044 -0.01812487]
 [-0.08062154 -0.03294044  0.05025757  0.01649417]
 [-0.02514717 -0.01812487  0.01649417  0.00657754]]

Posterior estimate of model standard deviations in each parameter
    m0  0.4357
    m1  0.2959
    m2  0.2242
    m3  0.0811

 Solution and 95% credible intervals 
 m0  -5.717 [ -6.434,  -5.006]
 m1  -5.108 [ -5.596,  -4.621]
 m2   1.818 [  1.462,   2.183]
 m3   0.973 [  0.844,   1.109]
